plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'  // for code coverage
    id 'checkstyle'  // for code style checks
}

group = 'com.bank'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core:9.22.1' // for database migrations

    // Utils
    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Swagger/OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    // https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.11.0'
    testImplementation 'com.h2database:h2'  // for testing
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport  // Generates test coverage report
}

checkstyle {
    toolVersion = '8.45'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}
